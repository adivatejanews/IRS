<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE granite-config PUBLIC "-//Granite Data Services//DTD granite-config internal//EN"
    "http://www.graniteds.org/public/dtd/2.0.0/granite-config.dtd">
<!-- GRANITE DATA SERVICES Copyright (C) 2007-2008 ADEQUATE SYSTEMS SARL 
	This file is part of Granite Data Services. Granite Data Services is free 
	software; you can redistribute it and/or modify it under the terms of the 
	GNU Lesser General Public License as published by the Free Software Foundation; 
	either version 3 of the License, or (at your option) any later version. Granite 
	Data Services is distributed in the hope that it will be useful, but WITHOUT 
	ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS 
	FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more 
	details. You should have received a copy of the GNU Lesser General Public 
	License along with this library; if not, see <http://www.gnu.org/licenses/>. -->

<granite-config scan="true">

	<!-- ! Used to get persistent class from HibernateProxy. ! -->
	<!-- <class-getter type="org.granite.hibernate.HibernateClassGetter"/> -->
	<!-- ! Use HibernateExternalizer to externalize all instances of classes 
		annotated ! with @Entity or @MappedSuperclass, and DefaultExternalizer for 
		those ! annotated with @Embeddable. ! -->

	<externalizers>

		<!-- configure lazy collection -->
		<!-- not enabled yet, becase there is error with lazy collection <configuration> 
			<hibernate-collection-metadata> yes </hibernate-collection-metadata> </configuration> -->

		<externalizer type="org.granite.hibernate.HibernateExternalizer">
			<include annotated-with="javax.persistence.Entity" />
			<include annotated-with="javax.persistence.MappedSuperclass" />
			<include annotated-with="javax.persistence.Embeddable" />
			<include type="org.hil.core.model.util.PageableList" />
			<include type="org.hil.core.model.vo.ChildrenDuePrintVO"/>
			<include type="org.hil.core.model.vo.RegionVaccinationReportData"/>
			<include type="org.hil.core.model.vo.search.ChildrenSearchVO" />
			<include type="org.hil.core.model.vo.ChildrenVaccinatedInLocationVO" />			
		</externalizer>

		<!-- externalizer POJO classes -->
		<externalizer
			type="org.granite.messaging.amf.io.util.externalizer.DefaultExternalizer">
			<include annotated-with="javax.xml.bind.annotation.XmlRootElement" />
		</externalizer>

	</externalizers>

	<!-- ! Use Spring Security service. ! -->

	<security
		type="org.granite.messaging.service.security.SpringSecurityService" />

	<tide-components>
		<tide-component annotated-with="org.springframework.stereotype.Service" />
		<tide-component type="org.granite.tide.spring.security.Identity" />
	</tide-components>

</granite-config>