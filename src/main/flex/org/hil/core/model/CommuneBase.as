/**
 * Generated by Gas3 v2.1.0 (Granite Data Services).
 *
 * WARNING: DO NOT CHANGE THIS FILE. IT MAY BE OVERWRITTEN EACH TIME YOU USE
 * THE GENERATOR. INSTEAD, EDIT THE INHERITED CLASS (Commune.as).
 */

package org.hil.core.model {

    import flash.utils.IDataInput;
    import flash.utils.IDataOutput;
    import org.granite.meta;
    import org.granite.tide.IEntityManager;
    import org.granite.tide.IPropertyHolder;

    use namespace meta;

    [Managed]
    public class CommuneBase extends AbstractEntity {

        private var _communeId:String;
        private var _communeName:String;
        private var _district:District;
        private var _notes:String;

        public function set communeId(value:String):void {
            _communeId = value;
        }
        public function get communeId():String {
            return _communeId;
        }

        public function set communeName(value:String):void {
            _communeName = value;
        }
        public function get communeName():String {
            return _communeName;
        }

        public function set district(value:District):void {
            _district = value;
        }
        public function get district():District {
            return _district;
        }

        public function set notes(value:String):void {
            _notes = value;
        }
        public function get notes():String {
            return _notes;
        }

        override meta function merge(em:IEntityManager, obj:*):void {
            var src:CommuneBase = CommuneBase(obj);
            super.meta::merge(em, obj);
            if (meta::isInitialized()) {
               em.meta_mergeExternal(src._communeId, _communeId, null, this, 'communeId', function setter(o:*):void{_communeId = o as String}, false);
               em.meta_mergeExternal(src._communeName, _communeName, null, this, 'communeName', function setter(o:*):void{_communeName = o as String}, false);
               em.meta_mergeExternal(src._district, _district, null, this, 'district', function setter(o:*):void{_district = o as District}, false);
               em.meta_mergeExternal(src._notes, _notes, null, this, 'notes', function setter(o:*):void{_notes = o as String}, false);
            }
        }

        override public function readExternal(input:IDataInput):void {
            super.readExternal(input);
            if (meta::isInitialized()) {
                _communeId = input.readObject() as String;
                _communeName = input.readObject() as String;
                _district = input.readObject() as District;
                _notes = input.readObject() as String;
            }
        }

        override public function writeExternal(output:IDataOutput):void {
            super.writeExternal(output);
            if (meta::isInitialized()) {
                output.writeObject((_communeId is IPropertyHolder) ? IPropertyHolder(_communeId).object : _communeId);
                output.writeObject((_communeName is IPropertyHolder) ? IPropertyHolder(_communeName).object : _communeName);
                output.writeObject((_district is IPropertyHolder) ? IPropertyHolder(_district).object : _district);
                output.writeObject((_notes is IPropertyHolder) ? IPropertyHolder(_notes).object : _notes);
            }
        }
    }
}
