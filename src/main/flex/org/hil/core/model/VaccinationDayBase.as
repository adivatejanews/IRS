/**
 * Generated by Gas3 v2.1.0 (Granite Data Services).
 *
 * WARNING: DO NOT CHANGE THIS FILE. IT MAY BE OVERWRITTEN EACH TIME YOU USE
 * THE GENERATOR. INSTEAD, EDIT THE INHERITED CLASS (VaccinationDay.as).
 */

package org.hil.core.model {

    import flash.utils.IDataInput;
    import flash.utils.IDataOutput;
    import org.granite.meta;
    import org.granite.tide.IEntityManager;
    import org.granite.tide.IPropertyHolder;

    use namespace meta;

    [Managed]
    public class VaccinationDayBase extends AbstractEntity {

        private var _commune:Commune;
        private var _dateInMonth:Number;
        private var _notes:String;

        public function set commune(value:Commune):void {
            _commune = value;
        }
        public function get commune():Commune {
            return _commune;
        }

        public function set dateInMonth(value:Number):void {
            _dateInMonth = value;
        }
        public function get dateInMonth():Number {
            return _dateInMonth;
        }

        public function set notes(value:String):void {
            _notes = value;
        }
        public function get notes():String {
            return _notes;
        }

        override meta function merge(em:IEntityManager, obj:*):void {
            var src:VaccinationDayBase = VaccinationDayBase(obj);
            super.meta::merge(em, obj);
            if (meta::isInitialized()) {
               em.meta_mergeExternal(src._commune, _commune, null, this, 'commune', function setter(o:*):void{_commune = o as Commune}, false);
               em.meta_mergeExternal(src._dateInMonth, _dateInMonth, null, this, 'dateInMonth', function setter(o:*):void{_dateInMonth = o as Number}, false);
               em.meta_mergeExternal(src._notes, _notes, null, this, 'notes', function setter(o:*):void{_notes = o as String}, false);
            }
        }

        override public function readExternal(input:IDataInput):void {
            super.readExternal(input);
            if (meta::isInitialized()) {
                _commune = input.readObject() as Commune;
                _dateInMonth = function(o:*):Number { return (o is Number ? o as Number : Number.NaN) } (input.readObject());
                _notes = input.readObject() as String;
            }
        }

        override public function writeExternal(output:IDataOutput):void {
            super.writeExternal(output);
            if (meta::isInitialized()) {
                output.writeObject((_commune is IPropertyHolder) ? IPropertyHolder(_commune).object : _commune);
                output.writeObject((_dateInMonth is IPropertyHolder) ? IPropertyHolder(_dateInMonth).object : _dateInMonth);
                output.writeObject((_notes is IPropertyHolder) ? IPropertyHolder(_notes).object : _notes);
            }
        }
    }
}
