/**
 * Generated by Gas3 v2.1.0 (Granite Data Services).
 *
 * WARNING: DO NOT CHANGE THIS FILE. IT MAY BE OVERWRITTEN EACH TIME YOU USE
 * THE GENERATOR. INSTEAD, EDIT THE INHERITED CLASS (Children.as).
 */

package org.hil.core.model {

    import flash.utils.IDataInput;
    import flash.utils.IDataOutput;
    import org.granite.meta;
    import org.granite.tide.IEntityManager;
    import org.granite.tide.IPropertyHolder;

    use namespace meta;

    [Managed]
    public class ChildrenBase extends AbstractEntity {

        private var _address:String;
        private var _author:String;
        private var _barcodeDate:Date;
        private var _caretakerBirthYear:Number;
        private var _caretakerID:String;
        private var _caretakerMobile:String;
        private var _caretakerName:String;
        private var _childCode:String;
        private var _creationDate:Date;
        private var _currentCaretaker:Number;
        private var _dateOfBirth:Date;
        private var _fatherBirthYear:Number;
        private var _fatherID:String;
        private var _fatherMobile:String;
        private var _fatherName:String;
        private var _finishedDate:Date;
        private var _firstName:String;
        private var _fromMobile:Boolean;
        private var _fullName:String;
        private var _gender:Boolean;
        private var _lastAuthor:String;
        private var _locked:Boolean;
        private var _modifiedDate:Date;
        private var _motherBirthYear:Number;
        private var _motherFirstName:String;
        private var _motherID:String;
        private var _motherMobile:String;
        private var _motherName:String;
        private var _protectedTetanus:Number;
        private var _village:Village;

        public function set address(value:String):void {
            _address = value;
        }
        public function get address():String {
            return _address;
        }

        public function set author(value:String):void {
            _author = value;
        }
        public function get author():String {
            return _author;
        }

        public function set barcodeDate(value:Date):void {
            _barcodeDate = value;
        }
        public function get barcodeDate():Date {
            return _barcodeDate;
        }

        public function set caretakerBirthYear(value:Number):void {
            _caretakerBirthYear = value;
        }
        public function get caretakerBirthYear():Number {
            return _caretakerBirthYear;
        }

        public function set caretakerID(value:String):void {
            _caretakerID = value;
        }
        public function get caretakerID():String {
            return _caretakerID;
        }

        public function set caretakerMobile(value:String):void {
            _caretakerMobile = value;
        }
        public function get caretakerMobile():String {
            return _caretakerMobile;
        }

        public function set caretakerName(value:String):void {
            _caretakerName = value;
        }
        public function get caretakerName():String {
            return _caretakerName;
        }

        public function set childCode(value:String):void {
            _childCode = value;
        }
        public function get childCode():String {
            return _childCode;
        }

        public function set creationDate(value:Date):void {
            _creationDate = value;
        }
        public function get creationDate():Date {
            return _creationDate;
        }

        public function set currentCaretaker(value:Number):void {
            _currentCaretaker = value;
        }
        public function get currentCaretaker():Number {
            return _currentCaretaker;
        }

        public function set dateOfBirth(value:Date):void {
            _dateOfBirth = value;
        }
        public function get dateOfBirth():Date {
            return _dateOfBirth;
        }

        public function set fatherBirthYear(value:Number):void {
            _fatherBirthYear = value;
        }
        public function get fatherBirthYear():Number {
            return _fatherBirthYear;
        }

        public function set fatherID(value:String):void {
            _fatherID = value;
        }
        public function get fatherID():String {
            return _fatherID;
        }

        public function set fatherMobile(value:String):void {
            _fatherMobile = value;
        }
        public function get fatherMobile():String {
            return _fatherMobile;
        }

        public function set fatherName(value:String):void {
            _fatherName = value;
        }
        public function get fatherName():String {
            return _fatherName;
        }

        public function set finishedDate(value:Date):void {
            _finishedDate = value;
        }
        public function get finishedDate():Date {
            return _finishedDate;
        }

        public function set firstName(value:String):void {
            _firstName = value;
        }
        public function get firstName():String {
            return _firstName;
        }

        public function set fromMobile(value:Boolean):void {
            _fromMobile = value;
        }
        public function get fromMobile():Boolean {
            return _fromMobile;
        }

        public function set fullName(value:String):void {
            _fullName = value;
        }
        public function get fullName():String {
            return _fullName;
        }

        public function set gender(value:Boolean):void {
            _gender = value;
        }
        public function get gender():Boolean {
            return _gender;
        }

        public function set lastAuthor(value:String):void {
            _lastAuthor = value;
        }
        public function get lastAuthor():String {
            return _lastAuthor;
        }

        public function set locked(value:Boolean):void {
            _locked = value;
        }
        public function get locked():Boolean {
            return _locked;
        }

        public function set modifiedDate(value:Date):void {
            _modifiedDate = value;
        }
        public function get modifiedDate():Date {
            return _modifiedDate;
        }

        public function set motherBirthYear(value:Number):void {
            _motherBirthYear = value;
        }
        public function get motherBirthYear():Number {
            return _motherBirthYear;
        }

        public function set motherFirstName(value:String):void {
            _motherFirstName = value;
        }
        public function get motherFirstName():String {
            return _motherFirstName;
        }

        public function set motherID(value:String):void {
            _motherID = value;
        }
        public function get motherID():String {
            return _motherID;
        }

        public function set motherMobile(value:String):void {
            _motherMobile = value;
        }
        public function get motherMobile():String {
            return _motherMobile;
        }

        public function set motherName(value:String):void {
            _motherName = value;
        }
        public function get motherName():String {
            return _motherName;
        }

        public function set protectedTetanus(value:Number):void {
            _protectedTetanus = value;
        }
        public function get protectedTetanus():Number {
            return _protectedTetanus;
        }

        public function set village(value:Village):void {
            _village = value;
        }
        public function get village():Village {
            return _village;
        }

        override meta function merge(em:IEntityManager, obj:*):void {
            var src:ChildrenBase = ChildrenBase(obj);
            super.meta::merge(em, obj);
            if (meta::isInitialized()) {
               em.meta_mergeExternal(src._address, _address, null, this, 'address', function setter(o:*):void{_address = o as String}, false);
               em.meta_mergeExternal(src._author, _author, null, this, 'author', function setter(o:*):void{_author = o as String}, false);
               em.meta_mergeExternal(src._barcodeDate, _barcodeDate, null, this, 'barcodeDate', function setter(o:*):void{_barcodeDate = o as Date}, false);
               em.meta_mergeExternal(src._caretakerBirthYear, _caretakerBirthYear, null, this, 'caretakerBirthYear', function setter(o:*):void{_caretakerBirthYear = o as Number}, false);
               em.meta_mergeExternal(src._caretakerID, _caretakerID, null, this, 'caretakerID', function setter(o:*):void{_caretakerID = o as String}, false);
               em.meta_mergeExternal(src._caretakerMobile, _caretakerMobile, null, this, 'caretakerMobile', function setter(o:*):void{_caretakerMobile = o as String}, false);
               em.meta_mergeExternal(src._caretakerName, _caretakerName, null, this, 'caretakerName', function setter(o:*):void{_caretakerName = o as String}, false);
               em.meta_mergeExternal(src._childCode, _childCode, null, this, 'childCode', function setter(o:*):void{_childCode = o as String}, false);
               em.meta_mergeExternal(src._creationDate, _creationDate, null, this, 'creationDate', function setter(o:*):void{_creationDate = o as Date}, false);
               em.meta_mergeExternal(src._currentCaretaker, _currentCaretaker, null, this, 'currentCaretaker', function setter(o:*):void{_currentCaretaker = o as Number}, false);
               em.meta_mergeExternal(src._dateOfBirth, _dateOfBirth, null, this, 'dateOfBirth', function setter(o:*):void{_dateOfBirth = o as Date}, false);
               em.meta_mergeExternal(src._fatherBirthYear, _fatherBirthYear, null, this, 'fatherBirthYear', function setter(o:*):void{_fatherBirthYear = o as Number}, false);
               em.meta_mergeExternal(src._fatherID, _fatherID, null, this, 'fatherID', function setter(o:*):void{_fatherID = o as String}, false);
               em.meta_mergeExternal(src._fatherMobile, _fatherMobile, null, this, 'fatherMobile', function setter(o:*):void{_fatherMobile = o as String}, false);
               em.meta_mergeExternal(src._fatherName, _fatherName, null, this, 'fatherName', function setter(o:*):void{_fatherName = o as String}, false);
               em.meta_mergeExternal(src._finishedDate, _finishedDate, null, this, 'finishedDate', function setter(o:*):void{_finishedDate = o as Date}, false);
               em.meta_mergeExternal(src._firstName, _firstName, null, this, 'firstName', function setter(o:*):void{_firstName = o as String}, false);
               em.meta_mergeExternal(src._fromMobile, _fromMobile, null, this, 'fromMobile', function setter(o:*):void{_fromMobile = o as Boolean}, false);
               em.meta_mergeExternal(src._fullName, _fullName, null, this, 'fullName', function setter(o:*):void{_fullName = o as String}, false);
               em.meta_mergeExternal(src._gender, _gender, null, this, 'gender', function setter(o:*):void{_gender = o as Boolean}, false);
               em.meta_mergeExternal(src._lastAuthor, _lastAuthor, null, this, 'lastAuthor', function setter(o:*):void{_lastAuthor = o as String}, false);
               em.meta_mergeExternal(src._locked, _locked, null, this, 'locked', function setter(o:*):void{_locked = o as Boolean}, false);
               em.meta_mergeExternal(src._modifiedDate, _modifiedDate, null, this, 'modifiedDate', function setter(o:*):void{_modifiedDate = o as Date}, false);
               em.meta_mergeExternal(src._motherBirthYear, _motherBirthYear, null, this, 'motherBirthYear', function setter(o:*):void{_motherBirthYear = o as Number}, false);
               em.meta_mergeExternal(src._motherFirstName, _motherFirstName, null, this, 'motherFirstName', function setter(o:*):void{_motherFirstName = o as String}, false);
               em.meta_mergeExternal(src._motherID, _motherID, null, this, 'motherID', function setter(o:*):void{_motherID = o as String}, false);
               em.meta_mergeExternal(src._motherMobile, _motherMobile, null, this, 'motherMobile', function setter(o:*):void{_motherMobile = o as String}, false);
               em.meta_mergeExternal(src._motherName, _motherName, null, this, 'motherName', function setter(o:*):void{_motherName = o as String}, false);
               em.meta_mergeExternal(src._protectedTetanus, _protectedTetanus, null, this, 'protectedTetanus', function setter(o:*):void{_protectedTetanus = o as Number}, false);
               em.meta_mergeExternal(src._village, _village, null, this, 'village', function setter(o:*):void{_village = o as Village}, false);
            }
        }

        override public function readExternal(input:IDataInput):void {
            super.readExternal(input);
            if (meta::isInitialized()) {
                _address = input.readObject() as String;
                _author = input.readObject() as String;
                _barcodeDate = input.readObject() as Date;
                _caretakerBirthYear = function(o:*):Number { return (o is Number ? o as Number : Number.NaN) } (input.readObject());
                _caretakerID = input.readObject() as String;
                _caretakerMobile = input.readObject() as String;
                _caretakerName = input.readObject() as String;
                _childCode = input.readObject() as String;
                _creationDate = input.readObject() as Date;
                _currentCaretaker = function(o:*):Number { return (o is Number ? o as Number : Number.NaN) } (input.readObject());
                _dateOfBirth = input.readObject() as Date;
                _fatherBirthYear = function(o:*):Number { return (o is Number ? o as Number : Number.NaN) } (input.readObject());
                _fatherID = input.readObject() as String;
                _fatherMobile = input.readObject() as String;
                _fatherName = input.readObject() as String;
                _finishedDate = input.readObject() as Date;
                _firstName = input.readObject() as String;
                _fromMobile = input.readObject() as Boolean;
                _fullName = input.readObject() as String;
                _gender = input.readObject() as Boolean;
                _lastAuthor = input.readObject() as String;
                _locked = input.readObject() as Boolean;
                _modifiedDate = input.readObject() as Date;
                _motherBirthYear = function(o:*):Number { return (o is Number ? o as Number : Number.NaN) } (input.readObject());
                _motherFirstName = input.readObject() as String;
                _motherID = input.readObject() as String;
                _motherMobile = input.readObject() as String;
                _motherName = input.readObject() as String;
                _protectedTetanus = function(o:*):Number { return (o is Number ? o as Number : Number.NaN) } (input.readObject());
                _village = input.readObject() as Village;
            }
        }

        override public function writeExternal(output:IDataOutput):void {
            super.writeExternal(output);
            if (meta::isInitialized()) {
                output.writeObject((_address is IPropertyHolder) ? IPropertyHolder(_address).object : _address);
                output.writeObject((_author is IPropertyHolder) ? IPropertyHolder(_author).object : _author);
                output.writeObject((_barcodeDate is IPropertyHolder) ? IPropertyHolder(_barcodeDate).object : _barcodeDate);
                output.writeObject((_caretakerBirthYear is IPropertyHolder) ? IPropertyHolder(_caretakerBirthYear).object : _caretakerBirthYear);
                output.writeObject((_caretakerID is IPropertyHolder) ? IPropertyHolder(_caretakerID).object : _caretakerID);
                output.writeObject((_caretakerMobile is IPropertyHolder) ? IPropertyHolder(_caretakerMobile).object : _caretakerMobile);
                output.writeObject((_caretakerName is IPropertyHolder) ? IPropertyHolder(_caretakerName).object : _caretakerName);
                output.writeObject((_childCode is IPropertyHolder) ? IPropertyHolder(_childCode).object : _childCode);
                output.writeObject((_creationDate is IPropertyHolder) ? IPropertyHolder(_creationDate).object : _creationDate);
                output.writeObject((_currentCaretaker is IPropertyHolder) ? IPropertyHolder(_currentCaretaker).object : _currentCaretaker);
                output.writeObject((_dateOfBirth is IPropertyHolder) ? IPropertyHolder(_dateOfBirth).object : _dateOfBirth);
                output.writeObject((_fatherBirthYear is IPropertyHolder) ? IPropertyHolder(_fatherBirthYear).object : _fatherBirthYear);
                output.writeObject((_fatherID is IPropertyHolder) ? IPropertyHolder(_fatherID).object : _fatherID);
                output.writeObject((_fatherMobile is IPropertyHolder) ? IPropertyHolder(_fatherMobile).object : _fatherMobile);
                output.writeObject((_fatherName is IPropertyHolder) ? IPropertyHolder(_fatherName).object : _fatherName);
                output.writeObject((_finishedDate is IPropertyHolder) ? IPropertyHolder(_finishedDate).object : _finishedDate);
                output.writeObject((_firstName is IPropertyHolder) ? IPropertyHolder(_firstName).object : _firstName);
                output.writeObject((_fromMobile is IPropertyHolder) ? IPropertyHolder(_fromMobile).object : _fromMobile);
                output.writeObject((_fullName is IPropertyHolder) ? IPropertyHolder(_fullName).object : _fullName);
                output.writeObject((_gender is IPropertyHolder) ? IPropertyHolder(_gender).object : _gender);
                output.writeObject((_lastAuthor is IPropertyHolder) ? IPropertyHolder(_lastAuthor).object : _lastAuthor);
                output.writeObject((_locked is IPropertyHolder) ? IPropertyHolder(_locked).object : _locked);
                output.writeObject((_modifiedDate is IPropertyHolder) ? IPropertyHolder(_modifiedDate).object : _modifiedDate);
                output.writeObject((_motherBirthYear is IPropertyHolder) ? IPropertyHolder(_motherBirthYear).object : _motherBirthYear);
                output.writeObject((_motherFirstName is IPropertyHolder) ? IPropertyHolder(_motherFirstName).object : _motherFirstName);
                output.writeObject((_motherID is IPropertyHolder) ? IPropertyHolder(_motherID).object : _motherID);
                output.writeObject((_motherMobile is IPropertyHolder) ? IPropertyHolder(_motherMobile).object : _motherMobile);
                output.writeObject((_motherName is IPropertyHolder) ? IPropertyHolder(_motherName).object : _motherName);
                output.writeObject((_protectedTetanus is IPropertyHolder) ? IPropertyHolder(_protectedTetanus).object : _protectedTetanus);
                output.writeObject((_village is IPropertyHolder) ? IPropertyHolder(_village).object : _village);
            }
        }
    }
}
