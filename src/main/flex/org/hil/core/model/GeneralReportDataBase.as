/**
 * Generated by Gas3 v2.1.0 (Granite Data Services).
 *
 * WARNING: DO NOT CHANGE THIS FILE. IT MAY BE OVERWRITTEN EACH TIME YOU USE
 * THE GENERATOR. INSTEAD, EDIT THE INHERITED CLASS (GeneralReportData.as).
 */

package org.hil.core.model {

    import flash.utils.IDataInput;
    import flash.utils.IDataOutput;
    import org.granite.meta;
    import org.granite.tide.IEntityManager;
    import org.granite.tide.IPropertyHolder;

    use namespace meta;

    [Managed]
    public class GeneralReportDataBase extends AbstractEntity {

        private var _amountOfTetanusProtection:Number;
        private var _commune:Commune;
        private var _notes:String;
        private var _time:Date;
        private var _totalNormalCases:Number;
        private var _totalSeriousCases:Number;

        public function set amountOfTetanusProtection(value:Number):void {
            _amountOfTetanusProtection = value;
        }
        public function get amountOfTetanusProtection():Number {
            return _amountOfTetanusProtection;
        }

        public function set commune(value:Commune):void {
            _commune = value;
        }
        public function get commune():Commune {
            return _commune;
        }

        public function set notes(value:String):void {
            _notes = value;
        }
        public function get notes():String {
            return _notes;
        }

        public function set time(value:Date):void {
            _time = value;
        }
        public function get time():Date {
            return _time;
        }

        public function set totalNormalCases(value:Number):void {
            _totalNormalCases = value;
        }
        public function get totalNormalCases():Number {
            return _totalNormalCases;
        }

        public function set totalSeriousCases(value:Number):void {
            _totalSeriousCases = value;
        }
        public function get totalSeriousCases():Number {
            return _totalSeriousCases;
        }

        override meta function merge(em:IEntityManager, obj:*):void {
            var src:GeneralReportDataBase = GeneralReportDataBase(obj);
            super.meta::merge(em, obj);
            if (meta::isInitialized()) {
               em.meta_mergeExternal(src._amountOfTetanusProtection, _amountOfTetanusProtection, null, this, 'amountOfTetanusProtection', function setter(o:*):void{_amountOfTetanusProtection = o as Number}, false);
               em.meta_mergeExternal(src._commune, _commune, null, this, 'commune', function setter(o:*):void{_commune = o as Commune}, false);
               em.meta_mergeExternal(src._notes, _notes, null, this, 'notes', function setter(o:*):void{_notes = o as String}, false);
               em.meta_mergeExternal(src._time, _time, null, this, 'time', function setter(o:*):void{_time = o as Date}, false);
               em.meta_mergeExternal(src._totalNormalCases, _totalNormalCases, null, this, 'totalNormalCases', function setter(o:*):void{_totalNormalCases = o as Number}, false);
               em.meta_mergeExternal(src._totalSeriousCases, _totalSeriousCases, null, this, 'totalSeriousCases', function setter(o:*):void{_totalSeriousCases = o as Number}, false);
            }
        }

        override public function readExternal(input:IDataInput):void {
            super.readExternal(input);
            if (meta::isInitialized()) {
                _amountOfTetanusProtection = function(o:*):Number { return (o is Number ? o as Number : Number.NaN) } (input.readObject());
                _commune = input.readObject() as Commune;
                _notes = input.readObject() as String;
                _time = input.readObject() as Date;
                _totalNormalCases = function(o:*):Number { return (o is Number ? o as Number : Number.NaN) } (input.readObject());
                _totalSeriousCases = function(o:*):Number { return (o is Number ? o as Number : Number.NaN) } (input.readObject());
            }
        }

        override public function writeExternal(output:IDataOutput):void {
            super.writeExternal(output);
            if (meta::isInitialized()) {
                output.writeObject((_amountOfTetanusProtection is IPropertyHolder) ? IPropertyHolder(_amountOfTetanusProtection).object : _amountOfTetanusProtection);
                output.writeObject((_commune is IPropertyHolder) ? IPropertyHolder(_commune).object : _commune);
                output.writeObject((_notes is IPropertyHolder) ? IPropertyHolder(_notes).object : _notes);
                output.writeObject((_time is IPropertyHolder) ? IPropertyHolder(_time).object : _time);
                output.writeObject((_totalNormalCases is IPropertyHolder) ? IPropertyHolder(_totalNormalCases).object : _totalNormalCases);
                output.writeObject((_totalSeriousCases is IPropertyHolder) ? IPropertyHolder(_totalSeriousCases).object : _totalSeriousCases);
            }
        }
    }
}
