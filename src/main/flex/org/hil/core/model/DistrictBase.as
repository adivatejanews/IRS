/**
 * Generated by Gas3 v2.1.0 (Granite Data Services).
 *
 * WARNING: DO NOT CHANGE THIS FILE. IT MAY BE OVERWRITTEN EACH TIME YOU USE
 * THE GENERATOR. INSTEAD, EDIT THE INHERITED CLASS (District.as).
 */

package org.hil.core.model {

    import flash.utils.IDataInput;
    import flash.utils.IDataOutput;
    import org.granite.meta;
    import org.granite.tide.IEntityManager;
    import org.granite.tide.IPropertyHolder;

    use namespace meta;

    [Managed]
    public class DistrictBase extends AbstractEntity {

        private var _districtId:String;
        private var _districtName:String;
        private var _notes:String;
        private var _province:Province;

        public function set districtId(value:String):void {
            _districtId = value;
        }
        public function get districtId():String {
            return _districtId;
        }

        public function set districtName(value:String):void {
            _districtName = value;
        }
        public function get districtName():String {
            return _districtName;
        }

        public function set notes(value:String):void {
            _notes = value;
        }
        public function get notes():String {
            return _notes;
        }

        public function set province(value:Province):void {
            _province = value;
        }
        public function get province():Province {
            return _province;
        }

        override meta function merge(em:IEntityManager, obj:*):void {
            var src:DistrictBase = DistrictBase(obj);
            super.meta::merge(em, obj);
            if (meta::isInitialized()) {
               em.meta_mergeExternal(src._districtId, _districtId, null, this, 'districtId', function setter(o:*):void{_districtId = o as String}, false);
               em.meta_mergeExternal(src._districtName, _districtName, null, this, 'districtName', function setter(o:*):void{_districtName = o as String}, false);
               em.meta_mergeExternal(src._notes, _notes, null, this, 'notes', function setter(o:*):void{_notes = o as String}, false);
               em.meta_mergeExternal(src._province, _province, null, this, 'province', function setter(o:*):void{_province = o as Province}, false);
            }
        }

        override public function readExternal(input:IDataInput):void {
            super.readExternal(input);
            if (meta::isInitialized()) {
                _districtId = input.readObject() as String;
                _districtName = input.readObject() as String;
                _notes = input.readObject() as String;
                _province = input.readObject() as Province;
            }
        }

        override public function writeExternal(output:IDataOutput):void {
            super.writeExternal(output);
            if (meta::isInitialized()) {
                output.writeObject((_districtId is IPropertyHolder) ? IPropertyHolder(_districtId).object : _districtId);
                output.writeObject((_districtName is IPropertyHolder) ? IPropertyHolder(_districtName).object : _districtName);
                output.writeObject((_notes is IPropertyHolder) ? IPropertyHolder(_notes).object : _notes);
                output.writeObject((_province is IPropertyHolder) ? IPropertyHolder(_province).object : _province);
            }
        }
    }
}
