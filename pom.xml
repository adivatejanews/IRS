<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.hil</groupId>
	<artifactId>hil</artifactId>
	<packaging>war</packaging>
	<name>hil_irs</name>
	<version>1.0</version>
	<description>Children Immunization Registry System (IRS). Copyright (C) 2011 PATH (www.path.org).</description>
	<url></url>
	<prerequisites>
		<maven>2.0.7</maven>
	</prerequisites>
	<issueManagement>
		<system></system>
		<url></url>
	</issueManagement>
	<ciManagement>
		<system />
		<url />
		<notifiers>
			<notifier>
				<type />
				<sendOnError />
				<sendOnFailure />
				<sendOnSuccess />
				<sendOnWarning />
				<address />
				<configuration />
			</notifier>
		</notifiers>
	</ciManagement>
	<inceptionYear>2011</inceptionYear>
	<mailingLists>
		<mailingList>
			<name />
			<subscribe />
			<unsubscribe />
			<post />
			<archive />
			<otherArchives />
		</mailingList>
	</mailingLists>
	<developers>
		<developer>
			<id>1</id>
			<name>Tran Trung Hieu</name>
			<email>htran282@gmail.com</email>			
			<organization>Freelance</organization>			
			<roles>
				<role>Developer</role>
			</roles>
			<timezone></timezone>
			<properties />
		</developer>		
	</developers>
	<contributors>
		<contributor>
			<name />
			<email />
			<url />
			<organization />
			<organizationUrl />
			<roles />
			<timezone />
			<properties />
		</contributor>
	</contributors>
	<licenses>
		<license>
			<name />
			<url />
			<distribution />
			<comments />
		</license>
	</licenses>
	<scm>
		<connection />
		<developerConnection />
		<tag />
		<url />
	</scm>
	<organization>
		<name>PATH</name>
		<url>www.path.org</url>
	</organization>

	<repositories>
		<!-- graniteds -->
		<repository>
			<id>java.net</id>
			<url>http://download.java.net/maven/2/</url>
		</repository>
		<repository>
			<id>central</id>
			<url>http://repo1.maven.org/maven2</url>
		</repository>
		<repository>
			<id>xfire</id>
			<url>http://www.ifremer.fr/maven/repository/</url>
		</repository>
		<!-- <repository> <id>grepcode.com</id> <url>http://grepcode.com/file/repo1.maven.org/maven2/</url> 
			</repository> -->
		<!-- dynamic jasper -->
		<repository>
			<id>djmaven2</id>
			<url>http://www.fdvs.com.ar/djmaven2</url>
			<name>DynamicJasper public Repository</name>
		</repository>


	</repositories>

	<pluginRepositories>

	</pluginRepositories>

	<build>
		<sourceDirectory>src/main/java</sourceDirectory>
		<scriptSourceDirectory>src/main/scripts</scriptSourceDirectory>
		<testSourceDirectory>src/test/java</testSourceDirectory>
		<outputDirectory>target/classes</outputDirectory>
		<testOutputDirectory>target/test-classes</testOutputDirectory>
		<defaultGoal>test</defaultGoal>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<excludes>
					<exclude>ApplicationResources_vi*.properties</exclude>
				</excludes>
				<filtering>true</filtering>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
			</testResource>
			<testResource>
				<directory>src/main/webapp</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/*.xml</include>
				</includes>
			</testResource>
		</testResources>
		<directory>target</directory>
		<finalName>${project.artifactId}-${project.version}</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.0.2</version>
				<configuration>
					<source>1.5</source>
					<target>1.5</target>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.5.1</version>
				<configuration>
					<additionalProjectnatures>
						<projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
						<projectnature>com.adobe.flexbuilder.project.flexnature</projectnature>
						<projectnature>com.adobe.flexbuilder.project.actionscriptnature</projectnature>
						<projectnature>org.granite.builder.granitenature</projectnature>
					</additionalProjectnatures>
					<additionalBuildcommands>
						<buildcommand>org.springframework.ide.eclipse.core.springbuilder</buildcommand>
						<buildcommand>com.adobe.flexbuilder.project.flexbuilder</buildcommand>
						<buildcommand>org.granite.builder.granitebuilder</buildcommand>
					</additionalBuildcommands>
					<downloadSources>false</downloadSources>
					<downloadJavadocs>false</downloadJavadocs>
					<wtpversion>1.5</wtpversion>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-idea-plugin</artifactId>
				<version>2.1</version>
				<configuration>
					<downloadSources>true</downloadSources>
					<downloadJavadocs>true</downloadJavadocs>
					<dependenciesAsLibraries>true</dependenciesAsLibraries>
					<useFullNames>false</useFullNames>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.2</version>
				<executions>
					<execution>
						<id>echohome</id>
						<phase>validate</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<tasks>
								<echo>JAVA_HOME=${java.home}</echo>
							</tasks>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>maven-jetty-plugin</artifactId>
				<version>6.1.11</version>
				<configuration>
					<contextPath>/</contextPath>
					<scanIntervalSeconds>10</scanIntervalSeconds>
					<scanTargetPatterns>
						<scanTargetPattern>
							<directory>src/main/webapp/swf</directory>
							<excludes>
								<exclude>**/*</exclude>
							</excludes>
						</scanTargetPattern>
					</scanTargetPatterns>
					<scanTargets>
						<scanTarget>src/main/resources/applicationContext*.xml</scanTarget>
						<!-- <scanTarget>src/main/webapp/WEB-INF/web.xml</scanTarget> -->
					</scanTargets>

				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>hibernate3-maven-plugin</artifactId>
				<version>2.2</version>
				<configuration>

					<components>
						<component>
							<name>hbm2ddl</name>
							<implementation>annotationconfiguration</implementation>
						</component>
					</components>
					<componentProperties>
						<update>true</update>
						<jdk5>true</jdk5>
						<outputfilename>db-create.sql</outputfilename>
						<propertyfile>target/classes/jdbc.properties</propertyfile>
						<skip>true</skip>
					</componentProperties>
				</configuration>
				<executions>
					<execution>
						<phase>process-test-resources</phase>
						<goals>
							<goal>hbm2ddl</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>${jdbc.groupId}</groupId>
						<artifactId>${jdbc.artifactId}</artifactId>
						<version>${jdbc.version}</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>dbunit-maven-plugin</artifactId>
				<version>1.0-beta-1</version>
				<configuration>
					<dataTypeFactoryName>${dbunit.dataTypeFactoryName}</dataTypeFactoryName>
					<driver>${jdbc.driverClassName}</driver>
					<username>${jdbc.username}</username>
					<password>${jdbc.password}</password>
					<url>${jdbc.url}</url>
					<src>src/test/resources/sample-data.xml</src>
					<type>${dbunit.operation.type}</type>
					<schema>${dbunit.schema}</schema>
					<skip>${maven.test.skip}</skip>
				</configuration>
				<executions>
					<execution>
						<id>test-compile</id>
						<phase>test-compile</phase>
						<goals>
							<goal>operation</goal>
						</goals>
					</execution>
					<execution>
						<!-- Runs before integration tests and jetty:run-war -->
						<id>test</id>
						<phase>test</phase>
						<goals>
							<goal>operation</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>${jdbc.groupId}</groupId>
						<artifactId>${jdbc.artifactId}</artifactId>
						<version>${jdbc.version}</version>
					</dependency>
				</dependencies>
			</plugin>

			<!-- jasper compile plugins prepare-package -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>jasperreports-maven-plugin</artifactId>
				<configuration>
					<compiler>net.sf.jasperreports.compilers.JRGroovyCompiler</compiler>
					<outputDirectory>src/main/webapp/reports/jrxml</outputDirectory>
					<sourceDirectory>src/main/webapp/reports/jrxml</sourceDirectory>
				</configuration>
				<executions>
					<execution>
						<phase>compile</phase>
						<goals>
							<goal>compile-reports</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>jasperreports</groupId>
						<artifactId>jasperreports</artifactId>
						<version>${jasperreports.version}</version>
					</dependency>
					<dependency>
						<groupId>log4j</groupId>
						<artifactId>log4j</artifactId>
						<version>${log4j.version}</version>
					</dependency>
					<dependency>
						<groupId>org.codehaus.groovy</groupId>
						<artifactId>groovy-all</artifactId>
						<version>1.5.0</version>
					</dependency>
				</dependencies>
			</plugin>
		</plugins>
	</build>
	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.parancoe</groupId>
			<artifactId>parancoe-core</artifactId>
			<version>${parancoe-core.version}</version>
			<!-- exclude spring 2.0.7 from parancore -->
			<exclusions>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-aop</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-beans</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-context</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-dao</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-jdbc</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-hibernate3</artifactId>
				</exclusion>
				<exclusion>
					<groupId>xerces</groupId>
					<artifactId>xercesImpl</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate</artifactId>
			<version>${hibernate.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.persistence</groupId>
			<artifactId>persistence-api</artifactId>
			<version>${persistence-api.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring-context.version}</version>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>${log4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>${aspectjrt.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${spring-core.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring-orm.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${spring-beans.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring-test.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring-core.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${spring-aop.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
			<version>2.0.3</version>
			<exclusions>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-support</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core-tiger</artifactId>
			<version>2.0.3</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.graniteds</groupId>
			<artifactId>granite-core</artifactId>
			<version>${graniteds.version}</version>
		</dependency>

		<dependency>
			<groupId>org.graniteds</groupId>
			<artifactId>granite-spring</artifactId>
			<version>${graniteds.version}</version>
		</dependency>

		<dependency>
			<groupId>org.graniteds</groupId>
			<artifactId>granite-hibernate</artifactId>
			<version>${graniteds.version}</version>
		</dependency>	
		<dependency>
			<groupId>org.smslib</groupId>
			<artifactId>smslib</artifactId>
			<version>${smslib.version}</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>		
		<dependency>
			<groupId>${jdbc.groupId}</groupId>
			<artifactId>${jdbc.artifactId}</artifactId>
			<version>${jdbc.version}</version>
		</dependency>

		<!-- jasper report dependencies -->

		<dependency>
			<groupId>jasperreports</groupId>
			<artifactId>jasperreports</artifactId>
			<version>${jasperreports.version}</version>
			<exclusions>
				<exclusion>
					<groupId>commons-collections</groupId>
					<artifactId>commons-collections</artifactId>
				</exclusion>
				<exclusion>
					<groupId>commons-digester</groupId>
					<artifactId>commons-digester</artifactId>
				</exclusion>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
				<exclusion>
					<groupId>eclipse</groupId>
					<artifactId>jdtcore</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>jasperreports</groupId>
			<artifactId>jasperreports-fonts-light</artifactId>
			<version>${jasperreports.version}</version>
		</dependency>
		<dependency>
			<groupId>com.lowagie</groupId>
			<artifactId>itext</artifactId>
			<version>${itext.version}</version>
		</dependency>
		<dependency>
			<groupId>net.sf.ehcache</groupId>
			<artifactId>ehcache</artifactId>
			<version>1.6.1</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi</artifactId>
			<version>3.8-beta4</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<!-- xml binding -->
		<dependency>
			<groupId>xfire</groupId>
			<artifactId>jaxb-api</artifactId>
			<version>2.0</version>
		</dependency>
		<dependency>
			<groupId>xfire</groupId>
			<artifactId>jaxb-impl</artifactId>
			<version>2.0.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>3.8-beta4</version>
		</dependency>
		<!-- pdf renderer -->
		<dependency>
			<groupId>org.swinglabs</groupId>
			<artifactId>pdf-renderer</artifactId>
			<version>1.0.5</version>
		</dependency>

		<!-- groovy for jasper compiler -->

		<dependency>
			<groupId>org.codehaus.groovy</groupId>
			<artifactId>groovy-all</artifactId>
			<version>1.5.0</version>
		</dependency>


		<!-- Quatz scheduling package -->
		<dependency>
			<groupId>opensymphony</groupId>
			<artifactId>quartz-all</artifactId>
			<version>1.6.1</version>
		</dependency>

		<!-- ZXing barcode encode/decode library -->

		<dependency>
			<groupId>com.google</groupId>
			<artifactId>zxing-core</artifactId>
			<version>1.7</version>
		</dependency>


		<dependency>
			<groupId>com.google</groupId>
			<artifactId>zxing-client</artifactId>
			<version>1.7</version>
		</dependency>

		<!-- dynamic jasper -->
		<dependency>
			<groupId>ar.com.fdvs</groupId>
			<artifactId>DynamicJasper</artifactId>
			<version>3.1.2</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-server</artifactId>
			<version>${jersey.version}</version>
			<exclusions>
				<exclusion>
					<groupId>asm</groupId>
					<artifactId>asm</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey.contribs</groupId>
			<artifactId>jersey-spring</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-json</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		
		<dependency>
			<groupId>com.sun.jersey.jersey-test-framework</groupId>
			<artifactId>jersey-test-framework-grizzly</artifactId>
			<version>${jersey.version}</version>
			<scope>test</scope>
		</dependency>

		<!--  excel template -->
		<dependency>
			<groupId>jexcelapi</groupId>
			<artifactId>jxl</artifactId>
			<version>2.6</version>
			<scope>compile</scope>
		</dependency>
	</dependencies>
	
	<profiles>
		<profile>
			<id>integration-test</id>
			<activation>
				<property>
					<name>!maven.test.skip</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.cargo</groupId>
						<artifactId>cargo-maven2-plugin</artifactId>
						<version>0.3</version>
						<configuration>
							<wait>${cargo.wait}</wait>
							<container>
								<containerId>${cargo.container}</containerId>
								<!--home>${cargo.container.home}</home -->
								<zipUrlInstaller>
									<url>${cargo.container.url}</url>
									<installDir>${installDir}</installDir>
								</zipUrlInstaller>
							</container>
							<configuration>
								<home>${project.build.directory}/${cargo.container}/container
								</home>
								<properties>
									<cargo.hostname>${cargo.host}</cargo.hostname>
									<cargo.servlet.port>${cargo.port}</cargo.servlet.port>
								</properties>
							</configuration>
						</configuration>
						<executions>
							<execution>
								<id>start-container</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>start</goal>
								</goals>
							</execution>
							<execution>
								<id>stop-container</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>stop</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.2</version>
						<configuration>
							<tasks>
								<taskdef resource="webtest_base_relaxed.taskdef">
									<classpath refid="maven.test.classpath" />
								</taskdef>
								<mkdir dir="target/webtest-data" />
								<!-- Delete old results file if it exists -->
								<delete file="target/webtest-data/web-tests-result.xml" />
								<!-- This is so the default will be used if no test case is specified -->
								<property name="test" value="run-all-tests" />
								<echo level="info">Testing '${project.build.finalName}'
									with locale
									'${user.language}'</echo>
								<ant antfile="src/test/resources/web-tests.xml" target="${test}">
									<property name="user.language" value="${user.language}" />
									<property name="webapp.name" value="${project.build.finalName}" />
									<property name="host" value="${cargo.host}" />
									<property name="port" value="${cargo.port}" />
								</ant>
							</tasks>
						</configuration>
						<executions>
							<execution>
								<phase>integration-test</phase>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>com.canoo</groupId>
								<artifactId>webtest</artifactId>
								<version>${webtest.version}</version>
								<exclusions>
									<exclusion>
										<groupId>javax.xml</groupId>
										<artifactId>jsr173</artifactId>
									</exclusion>
								</exclusions>
							</dependency>
							<dependency>
								<groupId>log4j</groupId>
								<artifactId>log4j</artifactId>
								<version>${log4j.version}</version>
							</dependency>
							<dependency>
								<groupId>oro</groupId>
								<artifactId>oro</artifactId>
								<version>${oro.version}</version>
							</dependency>
						</dependencies>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	<properties>
		<!-- jersey -->
		<jersey.version>1.7</jersey.version>
		<!-- Application settings -->
		<jasperreports.version>4.1.1</jasperreports.version>
		<itext.version>2.1.7</itext.version>
		<flex.sdk.version>3.3.0.4589</flex.sdk.version>
		<flex.mojo.version>2.0.3</flex.mojo.version>		
		<graniteds.version>2.1.0.GA</graniteds.version>
		<smslib.version>3.5.1</smslib.version>

		<copyright.year>2011</copyright.year>
		<dao.framework>hibernate</dao.framework>
		<web.framework>spring</web.framework>
		<!-- Testing dependency versions -->
		<jmock.version>1.1.0</jmock.version>
		<junit.version>3.8.1</junit.version>
		<spring-core.version>2.5.4</spring-core.version>
		<spring-test.version>2.5.4</spring-test.version>
		<servlet.version>2.5</servlet.version>
		<wiser.version>1.0.3</wiser.version>
		<oro.version>2.0.8</oro.version>
		<webtest.version>1454</webtest.version>
		<!-- Developing dependency versions -->
		<spring.version>2.5.4</spring.version>
		<parancoe-core.version>0.3.4</parancoe-core.version>
		<hibernate.version>3.2.6.ga</hibernate.version>
		<persistence-api.version>1.0</persistence-api.version>
		<spring-context.version>2.5.4</spring-context.version>
		<spring-orm.version>2.5.4</spring-orm.version>
		<spring-beans.version>2.5.4</spring-beans.version>
		<spring-dao.version>2.0.8</spring-dao.version>
		<spring-aop.version>2.5.4</spring-aop.version>
		<log4j.version>1.2.14</log4j.version>
		<aspectjrt.version>1.6.1</aspectjrt.version>
		<!-- Cargo settings -->
		<cargo.container>tomcat5x</cargo.container>
		<cargo.container.home>${env.CATALINA_HOME}</cargo.container.home>
		<cargo.container.url>http://archive.apache.org/dist/tomcat/tomcat-5/v5.5.23/bin/apache-tomcat-5.5.23.zip
		</cargo.container.url>
		<cargo.host>localhost</cargo.host>
		<cargo.port>8081</cargo.port>
		<cargo.wait>false</cargo.wait>
		<!-- Database settings -->
		<dbunit.dataTypeFactoryName>org.dbunit.dataset.datatype.DefaultDataTypeFactory
		</dbunit.dataTypeFactoryName>
		<dbunit.operation.type>CLEAN_INSERT</dbunit.operation.type>
		<hibernate.dialect>org.hibernate.dialect.MySQLInnoDBDialect
		</hibernate.dialect>
		<jdbc.groupId>mysql</jdbc.groupId>
		<jdbc.artifactId>mysql-connector-java</jdbc.artifactId>
		<jdbc.version>5.0.5</jdbc.version>
		<jdbc.driverClassName>com.mysql.jdbc.Driver</jdbc.driverClassName>
		<jdbc.url>jdbc:mysql://db.hil.org/hil?createDatabaseIfNotExist=true&amp;amp;useUnicode=true&amp;amp;characterEncoding=utf-8
		</jdbc.url>
		<jdbc.username>hil</jdbc.username>
		<jdbc.password>hil2011</jdbc.password>
	</properties>
</project>
